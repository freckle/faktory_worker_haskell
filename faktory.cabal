cabal-version: 1.18

-- This file has been generated from package.yaml by hpack version 0.33.0.
--
-- see: https://github.com/sol/hpack
--
-- hash: 45d5a467d0888353d8f4c7b46db79bd2a5e9dcdd4e0b5161b53dda745707ce5c

name:           faktory
version:        1.0.2.2
synopsis:       Faktory Worker for Haskell
description:    Haskell client and worker process for the Faktory background job server.
                .
                == Architecture overview
                .
                @
                |                        +--------------------+
                |                        |                    |
                |                        |     Faktory        |
                |                        |     Server         |
                |         +---------->>>>|                    +>>>>--------+
                |         |              |                    |            |
                |         |              |                    |            |
                |         |              +--------------------+            |
                | +-----------------+                            +-------------------+
                | |                 |                            |                   |
                | |    Client       |                            |     Worker        |
                | |    pushes       |                            |     pulls         |
                | |     jobs        |                            |      jobs         |
                | |                 |                            |                   |
                | |                 |                            |                   |
                | +-----------------+                            +-------------------+
                @
                .
                * `Client` - an API any process can use to push jobs to the Faktory server.
                * `Worker` - a process that pulls jobs from Faktory and executes them.
                * `Server` - the Faktory daemon which stores background jobs in queues to be processed by Workers.
                .
                This package contains only the `Client` and `Worker`.
category:       Network
homepage:       https://github.com/frontrowed/faktory_worker_haskell#readme
bug-reports:    https://github.com/frontrowed/faktory_worker_haskell/issues
author:         Freckle Engineering
maintainer:     engineering@freckle.com
copyright:      2018 Freckle Education
license:        MIT
license-file:   LICENSE
build-type:     Simple
extra-doc-files:
    CHANGELOG.md
    README.lhs

source-repository head
  type: git
  location: https://github.com/frontrowed/faktory_worker_haskell

library
  exposed-modules:
      Faktory.Client
      Faktory.Connection
      Faktory.Ent.Batch
      Faktory.Job
      Faktory.Job.Custom
      Faktory.JobOptions
      Faktory.Prelude
      Faktory.Producer
      Faktory.Protocol
      Faktory.Settings
      Faktory.Worker
  other-modules:
      Paths_faktory
  hs-source-dirs:
      library
  default-extensions: BangPatterns DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses NoImplicitPrelude NoMonomorphismRestriction OverloadedStrings RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TypeApplications TypeFamilies
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-missing-import-lists
  build-depends:
      aeson <1.6
    , aeson-casing
    , base >=4.13 && <5
    , bytestring <0.12
    , connection
    , cryptonite <0.30
    , megaparsec <9.1
    , memory <0.17
    , mtl
    , network
    , random <1.3
    , safe-exceptions
    , scanner
    , semigroups
    , text >1.2 && <1.4
    , time <1.12
    , unix
    , unordered-containers
  if impl(ghc >= 8.10)
    ghc-options: -Wno-missing-safe-haskell-mode -Wno-prepositive-qualified-module
  default-language: Haskell2010

executable faktory-example-consumer
  main-is: Main.hs
  other-modules:
      Paths_faktory
  hs-source-dirs:
      examples/consumer
  default-extensions: BangPatterns DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses NoImplicitPrelude NoMonomorphismRestriction OverloadedStrings RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TypeApplications TypeFamilies
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-missing-import-lists
  build-depends:
      aeson <1.6
    , base >=4.13 && <5
    , faktory
    , safe-exceptions
  if impl(ghc >= 8.10)
    ghc-options: -Wno-missing-safe-haskell-mode -Wno-prepositive-qualified-module
  default-language: Haskell2010

executable faktory-example-producer
  main-is: Main.hs
  other-modules:
      Paths_faktory
  hs-source-dirs:
      examples/producer
  default-extensions: BangPatterns DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses NoImplicitPrelude NoMonomorphismRestriction OverloadedStrings RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TypeApplications TypeFamilies
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-missing-import-lists
  build-depends:
      aeson <1.6
    , base >=4.13 && <5
    , faktory
    , safe-exceptions
  if impl(ghc >= 8.10)
    ghc-options: -Wno-missing-safe-haskell-mode -Wno-prepositive-qualified-module
  default-language: Haskell2010

test-suite hspec
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Faktory.ConnectionSpec
      Faktory.JobOptionsSpec
      FaktorySpec
      Paths_faktory
  hs-source-dirs:
      tests
  default-extensions: BangPatterns DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses NoImplicitPrelude NoMonomorphismRestriction OverloadedStrings RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TypeApplications TypeFamilies
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-missing-import-lists -rtsopts
  build-depends:
      aeson <1.6
    , async
    , base >=4.13 && <5
    , faktory
    , hspec
    , time <1.12
  if impl(ghc >= 8.10)
    ghc-options: -Wno-missing-safe-haskell-mode -Wno-prepositive-qualified-module
  default-language: Haskell2010

test-suite readme
  type: exitcode-stdio-1.0
  main-is: README.lhs
  other-modules:
      Paths_faktory
  hs-source-dirs:
      ./.
  default-extensions: BangPatterns DeriveAnyClass DeriveFoldable DeriveFunctor DeriveGeneric DeriveLift DeriveTraversable DerivingStrategies FlexibleContexts FlexibleInstances GADTs GeneralizedNewtypeDeriving LambdaCase MultiParamTypeClasses NoImplicitPrelude NoMonomorphismRestriction OverloadedStrings RankNTypes RecordWildCards ScopedTypeVariables StandaloneDeriving TypeApplications TypeFamilies
  ghc-options: -Weverything -Wno-missing-exported-signatures -Wno-missed-specialisations -Wno-all-missed-specialisations -Wno-unsafe -Wno-safe -Wno-missing-local-signatures -Wno-monomorphism-restriction -Wno-missing-import-lists -pgmL markdown-unlit
  build-depends:
      aeson <1.6
    , base >=4.13 && <5
    , faktory
    , markdown-unlit
  if impl(ghc >= 8.10)
    ghc-options: -Wno-missing-safe-haskell-mode -Wno-prepositive-qualified-module
  default-language: Haskell2010

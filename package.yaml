---
name: faktory
version: 1.1.2.0
category: Network
author: Freckle Engineering
maintainer: engineering@freckle.com
copyright: 2018 Freckle Education
license: MIT
github: frontrowed/faktory_worker_haskell
synopsis: Faktory Worker for Haskell
description: |
  Haskell client and worker process for the Faktory background job server.

  == Architecture overview

  @
  |                        +--------------------+
  |                        |                    |
  |                        |     Faktory        |
  |                        |     Server         |
  |         +---------->>>>|                    +>>>>--------+
  |         |              |                    |            |
  |         |              |                    |            |
  |         |              +--------------------+            |
  | +-----------------+                            +-------------------+
  | |                 |                            |                   |
  | |    Client       |                            |     Worker        |
  | |    pushes       |                            |     pulls         |
  | |     jobs        |                            |      jobs         |
  | |                 |                            |                   |
  | |                 |                            |                   |
  | +-----------------+                            +-------------------+
  @

  * `Client` - an API any process can use to push jobs to the Faktory server.
  * `Worker` - a process that pulls jobs from Faktory and executes them.
  * `Server` - the Faktory daemon which stores background jobs in queues to be processed by Workers.

  This package contains only the `Client` and `Worker`.

extra-doc-files:
  - CHANGELOG.md
  - README.lhs

ghc-options:
  -Weverything
  -Wno-missing-exported-signatures
  -Wno-missed-specialisations
  -Wno-all-missed-specialisations
  -Wno-unsafe
  -Wno-safe
  -Wno-missing-local-signatures
  -Wno-monomorphism-restriction
  -Wno-missing-import-lists

when:
  condition: impl(ghc >= 8.10)
  ghc-options:
    -Wno-missing-safe-haskell-mode
    -Wno-prepositive-qualified-module

dependencies:
  - base >= 4.13 && < 5

default-extensions:
  - BangPatterns
  - DeriveAnyClass
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveLift
  - DeriveTraversable
  - DerivingStrategies
  - FlexibleContexts
  - FlexibleInstances
  - GADTs
  - GeneralizedNewtypeDeriving
  - LambdaCase
  - MultiParamTypeClasses
  - NoImplicitPrelude
  - NoMonomorphismRestriction
  - OverloadedStrings
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TypeApplications
  - TypeFamilies

library:
  source-dirs: library
  dependencies:
    - aeson
    - aeson-casing
    - bytestring
    - connection
    - cryptonite
    - errors
    - megaparsec
    - memory
    - mtl
    - network
    - random
    - safe-exceptions
    - semigroups
    - scanner
    - text > 1.2
    - time
    - unix
    - unordered-containers

executables:
  faktory-example-producer:
    main: Main.hs
    source-dirs: examples/producer
    dependencies:
      - aeson
      - faktory
      - safe-exceptions

  faktory-example-consumer:
    main: Main.hs
    source-dirs: examples/consumer
    dependencies:
      - aeson
      - faktory
      - safe-exceptions

tests:
  hspec:
    main: Spec.hs
    source-dirs: tests
    ghc-options: -rtsopts
    dependencies:
      - faktory
      - aeson
      - aeson-qq
      - async
      - hspec
      - mtl
      - time

  readme:
    main: README.lhs
    source-dirs: .
    ghc-options: -pgmL markdown-unlit
    dependencies:
      - aeson
      - faktory
      - markdown-unlit
